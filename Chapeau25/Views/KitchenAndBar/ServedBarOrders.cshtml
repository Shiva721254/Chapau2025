@model List<Chapeau25.Models.Order>
@{
	ViewData["Title"] = "Kitchen - Running Orders";
}
<header>
	<partial name="_TopMenuKitchenAndBar" />
</header>
<div class="d-flex flex-wrap gap-4">
	@foreach (var order in Model)
	{
		<div class="card shadow" style="width: 23%; min-width: 250px; border-radius: 15px;">
			<div class="card-header d-flex justify-content-between align-items-center bg-primary text-white" style="border-top-left-radius: 15px; border-top-right-radius: 15px;">
				<div>
					<i class="bi bi-clock"></i> @order.OrderdTime.ToString(@"hh\:mm")
					<span class="ms-2">Table: <strong>#@order.TableNumber</strong></span>
				</div>

			</div>
			@{
				// Define the order of course types
				var courseOrder = new Dictionary<string, int>
				{
				{ "Starter", 1 },
				{ "Main", 2 },
				{ "Dessert", 3 }
				};

				// Group items by type (Starter/Main/Dessert) and sort them based on courseOrder
				var groupedItems = order.OrderItems
				.GroupBy(item => item.Type)
				.OrderBy(group => courseOrder.ContainsKey(group.Key) ? courseOrder[group.Key] : 99)
				.ToList();
			}
			<!-- Order Items -->
			@foreach (var group in groupedItems)
			{
				// Get the most advanced status in this course group
				//string? courseStatus = course.Max(oi => oi.CourseStatus);
				string courseStatus = "Ordered";

				if (group.All(oi => oi.CourseStatus == "Ordered"))
				{
					courseStatus = "Ordered";
				}
				else if (group.All(oi => oi.CourseStatus == "Preparing"))
				{
					courseStatus = "Preparing";
				}
				else if (group.All(oi => oi.CourseStatus == "Ready"))
				{
					courseStatus = "Ready";
				}
				else
				{
					courseStatus = "Served";
				}

				<div class="mb-3">
					<div style="background-color:#d5d5d5;display:flex;justify-content:space-between;align-items:center;padding:6px 15px;">
						<h6>@group.Key</h6>
						<div>
							<form method="post" action="/KitchenAndBar/ChangeBarOrderItemStatus">
								<input type="hidden" name="orderId" value="@order.OrderId" />
								<input type="hidden" name="course" value="@group.Key" />

								@if (courseStatus == "Ordered")
								{
									<button type="submit" name="courseStatus" value="Preparing" class="btn btn-warning">
										Ordered
									</button>
								}
								else if (courseStatus == "Preparing")
								{
									<button type="submit" name="courseStatus" value="Ready" class="btn btn-success">
										Preparing
									</button>
								}
								else if (courseStatus == "Ready")
								{
									<button type="submit" name="courseStatus" value="Served" class="btn btn-success">
										Ready
									</button>
								}
								else
								{
									<button type="submit" class="btn btn-success">
										Served
									</button>
								}
							</form>

						</div>
					</div>
					@foreach (OrderItem item in group)
					{
						<div class="d-flex justify-content-between align-items-start mb-2" style="padding:6px 15px;">
							<div>
								<strong>@item.Quantity x @item.ItemName</strong><br />


							</div>
							<div>
								<form method="post" action="/KitchenAndBar/ChangeBarOrderItemStatus">
									<input type="hidden" name="orderItemId" value="@item.OrderItemID" />
									@if (item.OrderItemStatus == OrderItemStatus.Ordered)
									{
										<button type="submit" name="orderItemStatus" value="@OrderItemStatus.Preparing" class="btn btn-warning">Ordered</button>
									}
									else if (item.OrderItemStatus == OrderItemStatus.Preparing)
									{
										<button type="submit" name="orderItemStatus" value="@OrderItemStatus.Ready" class="btn btn-success">Preparing</button>
									}
									else if (item.OrderItemStatus == OrderItemStatus.Ready)
									{
										<button type="submit" name="orderItemStatus" value="@OrderItemStatus.Served" class="btn btn-success">Ready</button>
									}
									else
									{

										<button type="submit" name="orderItemStatus" value="@OrderItemStatus.Ordered" class="btn btn-primary"> Served</button>
									}


								</form>
							</div>
						</div>
					}

				</div>
			}

		</div>

	}
</div>

