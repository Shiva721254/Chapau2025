@using Chapeau25.Enums
@model List<Chapeau25.Models.Order>
@{
	ViewData["Title"] = "Kitchen - Running Orders";
}
<header>
	<partial name="_TopMenuKitchenAndBar" />
</header>
<div class="d-flex flex-wrap gap-4"> 
	@foreach (var order in Model)
	{
		<div class="card shadow" style="width: 23%; min-width: 250px; border-radius: 15px;">
			<div class="card-header d-flex justify-content-between align-items-center bg-primary text-white" style="border-top-left-radius: 15px; border-top-right-radius: 15px;">
				<div>
					<i class="bi bi-clock"></i> @order.OrderdTime.ToString(@"hh\:mm")
					<span class="ms-2">Table: <strong>#@order.TableNumber</strong></span>
					<div class="text-end">
						<span class="me-3">Main Course Meal</span>
						Order: <strong>@order.OrderId</strong>

						<form method="post" action="/KitchenAndBar/ChangeWholeOrderStatus" class="mt-2">
							<input type="hidden" name="orderId" value="@order.OrderId" />

							@{
								var allStatuses = order.OrderItems.Select(oi => oi.OrderItemStatus).ToList();
								string nextStatus = "Ordered";

								if (allStatuses.All(s => s == OrderItemStatus.Ordered))
								{
									nextStatus = "Preparing";
								}
								else if (allStatuses.All(s => s == OrderItemStatus.Preparing))
								{
									nextStatus = "Ready";
								}
								else if (allStatuses.All(s => s == OrderItemStatus.Ready))
								{
									nextStatus = "Served";
								}
								else
								{
									nextStatus = "Served"; // fallback for mixed statuses
								}
							}

							<button type="submit" name="orderStatus" value="@nextStatus" class="btn btn-outline-light btn-sm">
								Set All to @nextStatus
							</button>
						</form>
					</div>
				</div>
			
			</div>
			
			<!-- Order Items -->
		
			

				<div class="mb-3">
					<div style="background-color:#d5d5d5;display:flex;justify-content:space-between;align-items:center;padding:6px 15px;">
						
					</div>
				@foreach (OrderItem item in order.OrderItems)
					{
						<div class="d-flex justify-content-between align-items-start mb-2" style="padding:6px 15px;">
							<div>
								<strong>@item.Quantity x @item.ItemName</strong><br />


							</div>
							<div>
								<form method="post" action="/KitchenAndBar/ChangeBarOrderItemStatus">
									<input type="hidden" name="orderItemId" value="@item.OrderItemID" />
									@if (item.OrderItemStatus == OrderItemStatus.Ordered)
									{
										<button type="submit" name="orderItemStatus" value="@OrderItemStatus.Preparing" class="btn btn-warning">Ordered</button>
									}
									else if (item.OrderItemStatus == OrderItemStatus.Preparing)
									{
										<button type="submit" name="orderItemStatus" value="@OrderItemStatus.Ready" class="btn btn-success">Preparing</button>
									}
									else if (item.OrderItemStatus == OrderItemStatus.Ready)
									{
										<button type="submit" name="orderItemStatus" value="@OrderItemStatus.Served" class="btn btn-success">Ready</button>
									}
									else
									{
										<button type="submit" name="orderItemStatus" class="btn btn-secondary" disabled>Served</button>
										@* <button type="submit" name="orderItemStatus" value="@OrderItemStatus.Served" class="btn btn-primary">Mark as Served</button> *@
									}


								</form>
							</div>
						</div>
					}

				</div>
			}

		</div>

	}
</div>

